swagger: "2.0"
################################################################################
#                              API Information                                 #
################################################################################
info:
  version: 2.0.0
  title: Pananames.com Merchant's API
  description: |
    This manual describes the API commands for domain handling.

    ### URL

    All API access is over HTTPS, and accessed from the api.pananames.com domain

    ```
    https://api.pananames.com/v2/
    ```

    All requests are submitted using the following HTTP interface

    The only way to secure transferred data is using **HTTPS**, no other security is currently possible.

    ### Signature

    Parameter **SIGNATURE** is merchant encoded constant string generated once when creating merchant.

    ### Parameterâ€™s Types

    Type | Description
    ------------ | -------------
    INTEGER |  integer number
    TEXT | variable-length array of characters
    DOMAIN | TEXT which represents a domain name
    IPADDRESS | TEXT which represents an IP address
    NAMESERVER | TEXT which represents domain name of the DNS server
    TARGET | TEXT which represents domain name or URL to forward

    ### Response

    The server responds with *Content-type: application/json*

    ### Errors

    All error messages have same format.
    ```json
    {
      "error": {
        "code": 400,
        "message": "Bad request",
        "description": "JSON is invalid."
      }
    }
    ```

    These errors may be returned by all methods.

    HTTP Status | Error code | Message | Description
    - | - | - | -
    `400` | 400 | Bad Request | The request was invalid or cannot be served. The exact error should be explained in the error payload.
    `401` | 401 | Unauthorized | Merchant's signature wasn't provided or was invalid.
    `404` | 404 | Not found | There is no resource behind the URI.
    `500` | 500 | Internal Server Error | You should contact with support.

    You'll get back all other errors with `200` HTTP status code. Each method has its own list of errors with codes.

    ### API Roles
    API supports one user role - merchant

################################################################################
#                  Host, Base Path, Schemes and Content Types                  #
################################################################################
host: api.pananames.com
basePath: /merchant/v2
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
################################################################################
#                                  Security                                    #
################################################################################
securityDefinitions:
  key:
    type: apiKey
    in: query
    name: signature
security:
  - key: []
################################################################################
#                                   Parameters                                 #
################################################################################
parameters:
  domain:
    name: domain
    in: query
    description: String which represents a domain name
    type: string
    required: true
    minLength: 4

paths:
  /check:
    get:
      description: |
        This command is used to determine if an object can be provisioned within a repository. It provides a hint that allows a client to anticipate the success or failure of provisioning an object using the create method, as object-provisioning requirements are ultimately a matter of server policy.

        When a check command has been processed successfully, the <resData> element MUST contain a child <domain:chkData> element that identifies the domain namespace. The <domain:chkData> element contains the following child element:

        #### Errors
        Error code | Message | Description
        - | - | -
        XXX | Message | Description

        #### Extensions
        Key | Type | Description
        - | - | -
        `claimKey` | string | Claim type.

        #### Blocking Status
        Non-blocking

      parameters:
        - $ref: '#/parameters/domain'
      responses:
        200:
          description: Information about queried domain avalibility, prices and extensions.
          schema:
            type: object
            required:
            - name
            - is_avaliable
            - is_premium
            - prices
            properties:
              name:
                type: string
                description: the fully qualified name of the queried domain object
              is_avaliable:
                type: boolean
                description: true value means that the object can be provisioned. false value means that the object can not be provisioned.
              is_premium:
                type: boolean
              prices:
                $ref: '#/definitions/Prices'
              extensions:
                type: object
                description: Dictionary with extensions values. See Extensions section in method description.
  /whois:
    get:
      description: |
        Get WHOIS information of the domain name.

        #### Errors
        Error code | Message | Description
        - | - | -
        XXX | Message | Description

        #### Blocking Status
        Non-blocking

      parameters:
        - $ref: '#/parameters/domain'
      responses:
        200:
          description: Information about queried domain avalibility, prices and extensions.
          schema:
            type: object
            required:
            - domain
            - admin_contact
            - tech_contact
            - billing_contact
            properties:
              domain:
                type: object
                description: Information about domain
              admin_contact:
                $ref: '#/definitions/ContactInfo'
                description: Information about domain
              tech_contact:
                $ref: '#/definitions/ContactInfo'
              billing_contact:
                $ref: '#/definitions/ContactInfo'

definitions:

  Error:
    type: object
    required:
    - code
    - message
    properties:
      code:
        type: integer
        description: Unique error code
      message:
        type: string
        description: Error message
      description:
        type: string
        description: Error description

  Price:
    type: object
    required:
    - currency
    - register
    - renew
    - transfer
    properties:
      currency:
        type: string
        default: usd
        enum:
        - usd
        - eur
      register:
        type: number
        format: float
      renew:
        type: number
        format: float
      transfer:
        type: number
        format: float
      is_promo:
        type: boolean
        description: True if prices are promotional.

  Prices:
    type: object
    allOf:
    - $ref: '#/definitions/Price'
    - type: object
      properties:
        common:
          $ref: '#/definitions/Price'

  ContactInfo:
    type: object
    required:
    - org
    - name
    - email
    - address
    - city
    - state
    - zip
    - country
    - phone
    properties:
      org:
        type: string
        description: Contact organization
      name:
        type: string
        description: Contact name
      email:
        type: string
        description: Contact email
      address:
        type: string
        description: Contact address
      city:
        type: string
        description: Contact city
      state:
        type: string
        description: Contact state
      zip:
        type: string
        description: Contact zip
      country:
        type: string
        description: Contact country
      phone:
        type: string
        description: Contact phone
      country_code:
        type: string
        description: Contact country code
